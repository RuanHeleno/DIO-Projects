{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SafeAreaView, ViewActivity, CategoriaView, BannerView, ViewPrincipal, ViewRestaurantes, TituloRestaurantes, ButtonTipoSelect, TextTipoSelect, SelectTipo } from \"./style\";\nimport RestauranteItem from \"../../components/RestauranteItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Principal() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      banners = _useState2[0],\n      setBanners = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categorias = _useState4[0],\n      setCategorias = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restaurantes = _useState6[0],\n      setRestaurantes = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  useEffect(function () {\n    function buscaDados() {\n      var response, data;\n      return _regeneratorRuntime.async(function buscaDados$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://my-json-server.typicode.com/pablohdev/app-ifood-clone/db'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              data = _context.sent;\n              setLoaded(true);\n              setBanners(data.banner_principal);\n              setCategorias(data.categorias);\n              setRestaurantes(data.restaurantes);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              Alert.alert('Erro ao consultar' + _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    }\n\n    buscaDados();\n  }, []);\n\n  var ViewHome = function ViewHome(props) {\n    return _jsxs(ViewPrincipal, {\n      children: [_jsx(TituloRestaurantes, {\n        children: \"Restaurantes\"\n      }), _jsx(ViewRestaurantes, {\n        children: restaurantes.forEach(function (restaurante) {\n          _jsx(RestauranteItem, {\n            foto: restaurante.url_img,\n            nome: restaurante.nome,\n            nota: restaurante.nota,\n            categoria: restaurante.categoria,\n            distancia: restaurante.distancia,\n            valorEntrega: restaurante.valor_frete,\n            tempoEntrega: restaurante.tempo_entrega\n          }, restaurante.id);\n        })\n      }), _jsx(StatusBar, {}), _jsx(SafeAreaView, {\n        children: loaded ? _jsx(ViewHome, {}) : _jsx(ViewActivity, {\n          children: _jsx(ActivityIndicator, {\n            color: \"red\",\n            size: \"large\"\n          })\n        })\n      })]\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/francislÃ©ia/Desktop/DIO/Bootcamp/MRVFullStacker/React/project/ifood/src/pages/Principal/index.js"],"names":["React","useState","useEffect","StatusBar","SafeAreaView","ViewActivity","CategoriaView","BannerView","ViewPrincipal","ViewRestaurantes","TituloRestaurantes","ButtonTipoSelect","TextTipoSelect","SelectTipo","RestauranteItem","Principal","banners","setBanners","categorias","setCategorias","restaurantes","setRestaurantes","loaded","setLoaded","buscaDados","fetch","response","json","data","banner_principal","Alert","alert","ViewHome","props","forEach","restaurante","url_img","nome","nota","categoria","distancia","valor_frete","tempo_entrega","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAGA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,gBANF,EAOEC,kBAPF,EAQEC,gBARF,EASEC,cATF,EAUEC,UAVF;AAaA,OAAOC,eAAP;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,kBAA8Bd,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoChB,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOiB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwClB,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA4BpB,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOqB,MAAP;AAAA,MAAeC,SAAf;;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAesB,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BC,KAAK,CAAC,iEAAD,CAFhC;;AAAA;AAEUC,cAAAA,QAFV;AAAA;AAAA,+CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGUC,cAAAA,IAHV;AAKIL,cAAAA,SAAS,CAAC,IAAD,CAAT;AAEAN,cAAAA,UAAU,CAACW,IAAI,CAACC,gBAAN,CAAV;AACAV,cAAAA,aAAa,CAACS,IAAI,CAACV,UAAN,CAAb;AACAG,cAAAA,eAAe,CAACO,IAAI,CAACR,YAAN,CAAf;AATJ;AAAA;;AAAA;AAAA;AAAA;AAWIU,cAAAA,KAAK,CAACC,KAAN,CAAY,iCAAZ;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAP,IAAAA,UAAU;AACX,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,WACE,MAAC,aAAD;AAAA,iBACE,KAAC,kBAAD;AAAA;AAAA,QADF,EAEE,KAAC,gBAAD;AAAA,kBACGb,YAAY,CAACc,OAAb,CAAqB,UAAAC,WAAW,EAAI;AACnC,eAAC,eAAD;AAEE,YAAA,IAAI,EAAEA,WAAW,CAACC,OAFpB;AAGE,YAAA,IAAI,EAAED,WAAW,CAACE,IAHpB;AAIE,YAAA,IAAI,EAAEF,WAAW,CAACG,IAJpB;AAKE,YAAA,SAAS,EAAEH,WAAW,CAACI,SALzB;AAME,YAAA,SAAS,EAAEJ,WAAW,CAACK,SANzB;AAOE,YAAA,YAAY,EAAEL,WAAW,CAACM,WAP5B;AAQE,YAAA,YAAY,EAAEN,WAAW,CAACO;AAR5B,aACOP,WAAW,CAACQ,EADnB;AAUD,SAXA;AADH,QAFF,EAgBE,KAAC,SAAD,KAhBF,EAiBE,KAAC,YAAD;AAAA,kBAEIrB,MAAM,GACJ,KAAC,QAAD,KADI,GAGJ,KAAC,YAAD;AAAA,oBACE,KAAC,iBAAD;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAA+B,YAAA,IAAI,EAAC;AAApC;AADF;AALN,QAjBF;AAAA,MADF;AA+BD,GAhCD;AAiCD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Text, View, Alert, ActivityIndicator } from 'react-native';\n\nimport {\n  SafeAreaView,\n  ViewActivity,\n  CategoriaView,\n  BannerView,\n  ViewPrincipal,\n  ViewRestaurantes,\n  TituloRestaurantes,\n  ButtonTipoSelect,\n  TextTipoSelect,\n  SelectTipo\n} from './style';\n\nimport RestauranteItem from '../../components/RestauranteItem';\n\nexport default function Principal() {\n  const [banners, setBanners] = useState([])\n  const [categorias, setCategorias] = useState([])\n  const [restaurantes, setRestaurantes] = useState([])\n  const [loaded, setLoaded] = useState(false)\n  \n  useEffect(() => {\n    async function buscaDados() {\n      try {\n        const response = await fetch('http://my-json-server.typicode.com/pablohdev/app-ifood-clone/db')\n        const data = await response.json()\n\n        setLoaded(true)\n\n        setBanners(data.banner_principal) \n        setCategorias(data.categorias) \n        setRestaurantes(data.restaurantes) \n      } catch(e) {\n        Alert.alert('Erro ao consultar' + e)\n      }\n    } \n\n    buscaDados()\n  }, [])\n\n  const ViewHome = (props) => {\n    return (\n      <ViewPrincipal>\n        <TituloRestaurantes>Restaurantes</TituloRestaurantes>\n        <ViewRestaurantes>\n          {restaurantes.forEach(restaurante => {\n            <RestauranteItem \n              key={restaurante.id}\n              foto={restaurante.url_img}\n              nome={restaurante.nome}\n              nota={restaurante.nota}\n              categoria={restaurante.categoria}\n              distancia={restaurante.distancia}\n              valorEntrega={restaurante.valor_frete}\n              tempoEntrega={restaurante.tempo_entrega}\n            />\n          })}\n        </ViewRestaurantes>\n        <StatusBar />\n        <SafeAreaView>\n          {\n            loaded ? (\n              <ViewHome />\n            ) : (\n              <ViewActivity>\n                <ActivityIndicator color='red' size=\"large\" />\n              </ViewActivity>\n            )\n          }\n        </SafeAreaView>\n      </ViewPrincipal>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}