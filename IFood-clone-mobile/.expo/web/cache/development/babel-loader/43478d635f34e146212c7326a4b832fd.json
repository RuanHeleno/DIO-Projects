{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport styled, { css } from 'styled-components/native';\nexport var TouchableOpacity = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    border: 1px solid red;\\n    border-radius: 5px;\\n    padding: 10px 40px;\\n    max-width: 190px;\\n    display: flex.;\\n    justify-content: center;\\n    align-items: center;\\n\\n    \", \"\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme === 'primary' && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n        background-color: red;\\n    \"])));\n});\nexport var Text = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    color: red;\\n\\n    \", \"\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme === 'primary' && css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n        background-color: white;\\n    \"])));\n});","map":{"version":3,"sources":["C:/Users/francislÃ©ia/Desktop/DIO/Bootcamp/MRVFullStacker/React/project/ifood/src/components/Button/style.js"],"names":["styled","css","TouchableOpacity","theme","Text"],"mappings":";;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,0BAA5B;AAEA,OAAO,IAAMC,gBAAgB,GAAGF,MAAM,CAACE,gBAAV,2QASvB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,KAAK,SAAV,IAAuBF,GAAvB,kHAAf;AAAA,CATuB,CAAtB;AAcP,OAAO,IAAMG,IAAI,GAAGJ,MAAM,CAACI,IAAV,4GAGX;AAAA,MAAGD,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,KAAK,SAAV,IAAuBF,GAAvB,oHAAf;AAAA,CAHW,CAAV","sourcesContent":["import styled, { css } from 'styled-components/native'\r\n\r\nexport const TouchableOpacity = styled.TouchableOpacity`\r\n    border: 1px solid red;\r\n    border-radius: 5px;\r\n    padding: 10px 40px;\r\n    max-width: 190px;\r\n    display: flex.;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${({ theme }) => theme === 'primary' && css`\r\n        background-color: red;\r\n    `}\r\n`\r\n\r\nexport const Text = styled.Text`\r\n    color: red;\r\n\r\n    ${({ theme }) => theme === 'primary' && css`\r\n        background-color: white;\r\n    `}\r\n`"]},"metadata":{},"sourceType":"module"}